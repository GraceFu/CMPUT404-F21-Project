# Generated by Django 3.2.7 on 2021-12-04 17:18

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('type', models.CharField(default='author', max_length=100)),
                ('authorID', models.UUIDField(editable=False, primary_key=True, serialize=False, unique=True)),
                ('displayName', models.CharField(default='Someone', max_length=100)),
                ('host', models.CharField(default='/', max_length=500)),
                ('url', models.URLField(blank=True, editable=False, null=True)),
                ('github', models.URLField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('type', models.CharField(default='post', max_length=100)),
                ('postID', models.UUIDField(editable=False, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=100)),
                ('source', models.URLField(blank=True, null=True)),
                ('origin', models.URLField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('contentType', models.CharField(blank=True, default='text/plain', max_length=100, null=True)),
                ('content', models.CharField(blank=True, max_length=500, null=True)),
                ('categories', models.JSONField(blank=True, null=True)),
                ('count', models.IntegerField(default=0)),
                ('published', models.DateTimeField(default=django.utils.timezone.now)),
                ('visibility', models.CharField(choices=[('PUBLIC', 'Public'), ('FRIENDS', 'Friends')], default='PUBLIC', max_length=50)),
                ('unlisted', models.BooleanField(default=False)),
                ('likes', models.IntegerField(default=0)),
                ('url', models.URLField(blank=True, editable=False, null=True)),
                ('comments', models.URLField(blank=True, editable=False, max_length=500, null=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.author')),
            ],
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('url', models.URLField(max_length=100, primary_key=True, serialize=False)),
                ('hostUsername', models.CharField(max_length=200)),
                ('hostPassword', models.CharField(max_length=200)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(default='like', max_length=100)),
                ('summary', models.CharField(max_length=100, null=True)),
                ('object', models.CharField(max_length=500, null=True)),
                ('author', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='api.author')),
            ],
        ),
        migrations.CreateModel(
            name='Inbox',
            fields=[
                ('type', models.CharField(default='inbox', max_length=100)),
                ('inboxID', models.UUIDField(editable=False, primary_key=True, serialize=False, unique=True)),
                ('items', models.JSONField(default=list)),
                ('author', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='api.author')),
            ],
        ),
        migrations.CreateModel(
            name='Friend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(default='friend', max_length=100)),
                ('summary', models.CharField(max_length=100)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('acceptance', models.BooleanField(default=False)),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actor', to='api.author')),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='object', to='api.author')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('type', models.CharField(default='comment', max_length=100)),
                ('commentID', models.UUIDField(editable=False, primary_key=True, serialize=False, unique=True)),
                ('content', models.CharField(max_length=500, null=True)),
                ('contentType', models.CharField(default='text/plain', max_length=100)),
                ('published', models.DateTimeField(default=django.utils.timezone.now)),
                ('author', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='api.author')),
                ('post', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='api.post')),
            ],
        ),
        migrations.CreateModel(
            name='Follower',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(default='followers', max_length=100)),
                ('followee', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='followee', to='api.author')),
                ('follower', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='follower', to='api.author')),
            ],
            options={
                'unique_together': {('followee', 'follower')},
            },
        ),
    ]
